# =============================================================================
# Example Qudi configuration file, optimiert für OptimalControl Plugin
# =============================================================================

global:
    # Modules oder logics, die beim Start direkt geladen werden
    startup_modules: []

    # Server-Konfiguration (für Remote-Aufrufe, z.B. Jupyter-Notebook)
    remote_modules_server:
        address: 'localhost'
        port: 12346

    # Server-Port für lokales Serving der Modul-Namespace, notwendig für Jupyter-Kernel:
    namespace_server_port: 18862

    # Wenn True, werden Remote-Methodenaufrufe serialisiert und de-serialisiert (hilfreich bei numpy)
    force_remote_calls_by_value: True

    # Qss-Stylesheet für das GUI-Design
    stylesheet: 'qdark.qss'

    # Datenverzeichnis (optional) – daily_data_dirs: True => Tägliche Unterordner
    daily_data_dirs: True


# =============================================================================
#  GUI SECTION
# =============================================================================
gui:
    # Optimal-Control GUI
    optimalcontrol:
        module.Class: 'gui.optimalcontrol.OptimizationGUI'
        connect:
            optimization_logic: 'optimizationlogic'


# =============================================================================
#  LOGIC SECTION
# =============================================================================
logic:
    # Optimal-Control Logic (QuOCS-Plugin)
    optimizationlogic:
        module.Class: 'logic.optimalcontrol.OptimizationLogic'
        connect:
            fom_logic: 'fomlogic'
            controls_logic: 'controlslogic'

    fomlogic:
        module.Class: 'logic.optimalcontrol.worker_fom'
        options:
            max_time: 30.0

    controlslogic:
        module.Class: 'logic.optimalcontrol.worker_controls'
        options:
            max_time: 30.0